#!/usr/bin/env python

import sys
import logging
import optparse
import requests

from lxml import etree
from lxml.cssselect import CSSSelector

class WordpressToPDF(object):
    def __init__(self):
        self.session = None

    def main(self):
        parser = optparse.OptionParser(
            usage='%prog [options] <url> <filename.pdf>',
        )

        parser.add_option('--verbosity', dest='verbosity', default=0, type='int',
            help="Verbosity level; 0=minimal output, 1=normal output, "
                "2=verbose output, 3=very verbose output")

        self.options, args = parser.parse_args()

        if len(args) != 2:
            parser.error("must specify an url and an output filename")

        self.options.base_url = args[0]
        self.options.filename = args[1]

        self.setup_logging()

        self.create_pdf()

        return 0

    def create_pdf(self):
        archives = self.parse('%s/archives.html' % self.options.base_url)

        for x in CSSSelector('div.archive-individual ul.archive-list li a')(archives):
            y = self.parse(x.get('href'))

            title = CSSSelector('div#content h1 a')(y)[0].text
            date = CSSSelector('div#content div.dated')(y)[0].text
            text = CSSSelector('div#content #text')(y)[0]

            print title, date, text

            break

    def parse(self, *args, **kwargs):
        return etree.HTML(self.GET(*args, **kwargs))

    def GET(self, url):
        if self.session is None:
            self.session = requests.Session()

        response = self.session.get(url)
        response.raise_for_status()

        return response.text

    def setup_logging(self):
        self.log = logging.getLogger()
        self.log.setLevel({
            0: logging.WARNING,
            1: logging.INFO,
            2: logging.DEBUG,
        }[self.options.verbosity])

        handler = logging.StreamHandler(sys.stderr)
        handler.setFormatter(
            logging.Formatter('%(asctime).19s %(levelname).1s %(message)s')
        )
        self.log.addHandler(handler)

if __name__ == '__main__':
    sys.exit(WordpressToPDF().main())
